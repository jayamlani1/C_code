Question:
Given a string s, find the length of the longest substring without repeating characters.

Code:

#include<stdio.h>
#include<string.h>
int arr[128][2];

void resetarr()
{
    for(int i=0;i<128;i++)
    {
        // The zeroeth element is to see if the element has already occured and second element is to check the last position of this character.
        // The last position is required so that we can reset the pointer to that location and start to look for next substring.
        arr[i][0]=0;
        arr[i][1]=-1;
    }
}


int lengthOfLongestSubstring(char * s){

    int len = strlen(s);
    int i,j;
    resetarr();
    int max=0, cur=0;
    
    for(i=0;i<len;i++)
    {
        
        if(arr[s[i]][0] == 0)
        {
            arr[s[i]][0] = 1;
            arr[s[i]][1] = i;
            cur ++;
            //printf("%d\n", cur);
        }
        else
        {
            
            if(cur > max)
            {
                max = cur;
            }
            cur =0;
            i = arr[s[i]][1];
            printf("Value of i %d \n", i);
            resetarr();
        }
    }
    if(cur > max)
    {
        max = cur;
    }
    return max;
}
